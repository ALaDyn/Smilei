################################################################################
# Machine file for the Adastra machine at CINES
#
# Note:
# TODO(Etienne M): This gpu_amd config is not production ready and is meant, as
# of 4th/03/22, to be used "only" on the cines GPU porting machines.
# It expects the CCE (cray compiler).
#
# You'll want to compile smilei with the "gpu_amd" config flag enabled:
# $ make machine="adastra_gpu" config="amd_gpu" -j
#
# Each node has 4 MI250X accelerators. An MI250X is made of 2 GCDs which are to 
# be used as if it was an individual GPU.
# You'll want to associate one MPI proc per GCD (2 MPI/MI250X).
#
# To compile you may want these modules:
# module load craype-network-ofi craype-x86-rome libfabric/1.13.1
# module load PrgEnv-cray/8.1.0 cce/13.0.1
# module load cray-mpich/8.1.13
# module load rocm/4.5.0
# # module load craype-accel-amd-gfx908 # MI100
# module load craype-accel-amd-gfx90a # MI250X
# module load cray-hdf5-parallel/1.12.0.6 cray-python/3.9.7.1
# module load perftools-base/21.12.0
#
#
################################################################################

################################################################################
# Compilers
################################################################################

# SMILEICXX := ~/aomp_stuff/usr/lib/aomp_15.0-1/bin/clang++
SMILEICXX := $(CC)
SMILEICXX.DEPS := $(SMILEICXX)
# THRUSTCXX := hipcc
THRUSTCXX := $(SMILEICXX)

################################################################################
# Feature flags
################################################################################

ADASTRA_FEATURE_FLAGS := -std=c++14

################################################################################
# Warning flags
################################################################################

ADASTRA_WARNING_FLAGS := -Wextra -pedantic
ADASTRA_WARNING_FLAGS += -Wno-unused-variable -Wno-unused-parameter -Wno-unknown-pragmas

################################################################################
# Optimization flags
################################################################################

# Lto and mcmodel lead to an "unclosed quote" linker script error: https://reviews.llvm.org/D26795
# ADASTRA_OPTIMIZATION_LTO_FLAGS   := -flto=thin
# ADASTRA_OPTIMIZATION_OTHER_FLAGS := -mcmodel=large
ADASTRA_OPTIMIZATION_FLAGS       := -O3 $(ADASTRA_OPTIMIZATION_LTO_FLAGS) $(ADASTRA_OPTIMIZATION_OTHER_FLAGS)
# More FP optimizations at the cost of non strict IEEE compliance
ADASTRA_OPTIMIZATION_FLAGS       += -ffast-math 

################################################################################
# Debug flags
################################################################################

# To check for leaks, use this feature
# ADASTRA_DEBUG_SANITIZER_FLAGS := -fsanitize=address
ADASTRA_DEBUG_FLAGS           := -g $(ADASTRA_DEBUG_SANITIZER_FLAGS)

################################################################################
# Omp flags
################################################################################

ADASTRA_OMP_FLAGS := -fopenmp

################################################################################
# OMP GPU offloading support flags
################################################################################

ifneq (,$(call parse_config,gpu_amd))
	# Add mi100/250x amd gpu arch
	ADASTRA_ACCELERATOR_GPU_TARGET_ARCH := amdgcn-amd-amdhsa
	ADASTRA_ACCELERATOR_GPU_TARGET      := gfx908
    # ADASTRA_ACCELERATOR_GPU_TARGET      := gfx90a

    # When using OMP
	ADASTRA_ACCELERATOR_GPU_OMP_DEFINE_FLAGS := -DSMILEI_ACCELERATOR_GPU_OMP
    ADASTRA_ACCELERATOR_GPU_OMP_FLAGS        := -fopenmp-targets=$(ADASTRA_ACCELERATOR_GPU_TARGET_ARCH) -Xopenmp-target=$(ADASTRA_ACCELERATOR_GPU_TARGET_ARCH) -march=$(ADASTRA_ACCELERATOR_GPU_TARGET)

    # When using hip/cuda to build kernels
    # When you ask CCE to drive the hip compilation
    ADASTRA_ACCELERATOR_GPU_KERNEL_FLAGS := -x hip --offload-arch=$(ADASTRA_ACCELERATOR_GPU_TARGET)
	# When you use hipcc directly
	# ADASTRA_ACCELERATOR_GPU_KERNEL_FLAGS := --offload-arch=$(ADASTRA_ACCELERATOR_GPU_TARGET)
endif

################################################################################
# Includes
################################################################################

ADASTRA_INCLUDES := -I$(CRAY_MPICH_DIR)/include -I$(ROCM_PATH)/hiprand/include -I$(ROCM_PATH)/rocrand/include

################################################################################
# Libs
################################################################################

# May help resolve some linker issue
# -foffload=-lm

# Small perf increase but causes ABI problems when cray-pat is used
# ADASTRA_OMP_STATIC := -static-openmp
# ADASTRA_MPI_gfx908_LIB := $(PE_MPICH_GTL_DIR_amd_gfx908) $(PE_MPICH_GTL_LIBS_amd_gfx908)
# ADASTRA_MPI_gfx90a_LIB := $(PE_MPICH_GTL_DIR_amd_gfx90a) $(PE_MPICH_GTL_LIBS_amd_gfx90a)
# ADASTRA_MPI            := -L$(CRAY_MPICH_DIR)/lib -lmpi $(ADASTRA_MPI_gfx908_LIB) $(ADASTRA_MPI_gfx90a_LIB)

# ADASTRA_HIP := -L$(HIP_LIB_PATH) -lamdhip64

ADASTRA_LIBS := $(ADASTRA_MPI) $(ADASTRA_HIP) $(ADASTRA_OMP_STATIC)

################################################################################
#
################################################################################

# Inherit of all the typical *.cpp compilation options
# ACCELERATOR_GPU_KERNEL_FLAGS := $(CXXFLAGS) # This command is soo weird, it doesnt work as expected
ACCELERATOR_GPU_KERNEL_FLAGS += $(shell $(PYTHONCONFIG) --includes) $(DIRS:%=-I%)
ACCELERATOR_GPU_KERNEL_FLAGS += $(ADASTRA_FEATURE_FLAGS)
ACCELERATOR_GPU_KERNEL_FLAGS += $(ADASTRA_WARNING_FLAGS)
ACCELERATOR_GPU_KERNEL_FLAGS += $(ADASTRA_OPTIMIZATION_FLAGS)
ACCELERATOR_GPU_KERNEL_FLAGS += $(ADASTRA_DEBUG_FLAGS)
ACCELERATOR_GPU_KERNEL_FLAGS += $(ADASTRA_OMP_FLAGS)
ACCELERATOR_GPU_KERNEL_FLAGS += $(ADASTRA_ACCELERATOR_GPU_OMP_DEFINE_FLAGS)
# ACCELERATOR_GPU_KERNEL_FLAGS += $(ADASTRA_ACCELERATOR_GPU_OMP_FLAGS)
ACCELERATOR_GPU_KERNEL_FLAGS += $(ADASTRA_ACCELERATOR_GPU_KERNEL_FLAGS)
ACCELERATOR_GPU_KERNEL_FLAGS += $(ADASTRA_INCLUDES)

CXXFLAGS += $(ADASTRA_FEATURE_FLAGS)
CXXFLAGS += $(ADASTRA_WARNING_FLAGS)
CXXFLAGS += $(ADASTRA_OPTIMIZATION_FLAGS)
CXXFLAGS += $(ADASTRA_DEBUG_FLAGS)
CXXFLAGS += $(ADASTRA_OMP_FLAGS)
CXXFLAGS += $(ADASTRA_ACCELERATOR_GPU_OMP_DEFINE_FLAGS)
CXXFLAGS += $(ADASTRA_ACCELERATOR_GPU_OMP_FLAGS) # if gpu_amd is set, adds the appropriate flags, else nothing is added
CXXFLAGS += $(ADASTRA_INCLUDES)

LDFLAGS += $(ADASTRA_DEBUG_FLAGS) $(ADASTRA_OMP_FLAGS)
LDFLAGS += $(ADASTRA_LIBS)
# We need to link with the appropriate "First-Party Tool" (as OpenMP calls them)
LDFLAGS += $(ADASTRA_ACCELERATOR_GPU_OMP_FLAGS)
# Without Ofast/O3 at link time, the kernel'll not be optimized ~~. 
# Some kind of LTO is used, or maybe the kernel optimization is only done at link time.
# -v to dump omp kernel info (register alloc/spill etc.)
LDFLAGS += $(ADASTRA_OPTIMIZATION_FLAGS) -v
