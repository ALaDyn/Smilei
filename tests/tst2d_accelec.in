# SIMULATION PARAMETERS
# dim: Geometry of the simulation
#      1d3v = cartesian grid with 1d in space + 3d in velocity
#      2d3v = cartesian grid with 2d in space + 3d in velocity
#      3d3v = cartesian grid with 3d in space + 3d in velocity
#      2drz = cylindrical (r,z) grid with 3d3v particles
#
dim = 2d3v

# order of interpolation
interpolation_order = 2 

# SIMULATION TIME
# res_time: temporal resolution (integer = number of time−steps within one normalization period)
# timestep: alternative to res_time. Specify the time step in units of the normalization period)
# sim_time: duration of the simulation in units of the normalization period 
#
timestep = 0.0197352129
sim_time = 1600.0

# SIMULATION BOX : for all space directions (use vector)
# res_space: spatial resolution (vector of integer = number of cells in one normalization wavelength )
# cell_length: alternative to res_space. Specify the cell size in units of the normalization wavelength.
# sim_length: length of the simulation in units of the normalization wavelength 
#
cell_length  = 0.019894367 0.2387324  
sim_length = 6000.  183.  

#Field Boundary conditions
bc_em_type_long = silver-muller
bc_em_type_trans = silver-muller

#MPI paralellization
number_of_procs = 24 6
 
#Moving window parameter
res_space_win_x = 6912 #Activate moving window and specify its number of cells
t_move_win = 125.      #Time at which the window starts moving (in units of the normalization period)
vx_win = 0.9997        #Velocity of the window in c.

#Cluster width (please stick to 1 for smilei.0)
clrw = 1

# RANDOM seed 
# this is used to randomize the random number generator
random_seed = 0

# DEFINE ALL SPECIES

# species_type: ion, electron, positron, test ...
# initialization_type: regular, cold or (isotrop) Maxwell−Juettner distribution# n_part_per_cell: number of particle−per−cell
# c_part_max: factor on the memory reserved for the total number of particles
# mass: particle mass in units of the electron mass
# charge: particle charge in units of e (−e is the electron charge)
# density: species density in units of the normalization density
# mean_velocity: mean velocity of the species (3D vector) in units of the light velocity
# temperature: temperature of the species in units of m_e c^2
# dynamics_type: species type of dynamics = norm or rrLL
# time_frozen: time during which the particles are frozen in units of the normalization time
# radiating: boolean, if true incoherent radiation are calculated using the Larmor formula 
#
species
	species_type = proton
	initialization_type = regular
	ionization_model = none
        plasma_geometry = trap
        vacuum_length   = 0.0  0.0 
        plasma_length   = 6000.  305.0
        slope_length = 0.0 0.0
	n_part_per_cell = 1 
	c_part_max = 1.0
	mass = 1836.0
	charge = 1.0
	density = 0.000494
	mean_velocity = 0.0 0.0 0.0
	temperature = 0.001
	dynamics_type = norm
	time_frozen = 100000.
	radiating = false
	bc_part_type_long  = supp
	bc_part_type_trans = supp
end

species 
	species_type = electron1
	initialization_type = regular
        plasma_geometry = trap
        vacuum_length   = 0.0  0.0 
        plasma_length   = 6000.  305.0
        slope_length = 0.0 0.0
	n_part_per_cell = 20
	c_part_max = 1.0
	mass = 1.0
	charge = -1.0
	density = 0.000494
	mean_velocity = 0.0 0.0 0.0
	temperature = 0.001
	dynamics_type = norm	
	time_frozen = 0.0
	radiating = false
	bc_part_type_long = supp
	bc_part_type_trans = stop
end

# ----------------
# LASER PROPERTIES
# ----------------
#
# for each laser define:
# a0: maximum amplitude of the laser electric field (in units of the normalization field)
# angle: angle (in degree) at which the laser enters the simulation box
# delta: polarization parameter, (0:y) (1:z) (0.707106781:circ)
# time_profile: string defining the time profile
# double_params: vector of real parameters used by the different time-profiles
#
laser
	a0=8.0
        boxSide = west
	angle=0
	delta=0.0              
	time_profile =  gaussian
        transv_profile = gaussian
	double_params = 9.36 0.0 0.0 # gaussian:FWHM in intensity, plateau length, delay (same unit as sim_length)
        int_params = 3 # Cut-off of the longitudinal gaussian in number of sigma
        double_params_transv = 91.5 26.4 # distance from axis, transverse FWHM in intensity (same unit as sim_length)
        int_params_transv= 2 # order of the hyper gaussian
end

# ---------------------
# DIAGNOSTIC PARAMETERS
# ---------------------

# print_every (on screen text output) 
print_every = 10

# every for field dump
fieldDump_every = 1200

# every for particle dump
particleDump_every = 10000

# every for averagefield Dump
avgfieldDump_every = 10000


# DIAG ON SCALARS
# every = number of time-steps between each output
#
diagnostic scalar
	every = 600
end

dump_step = 10000
exit_after_dump = false

