# ---------------------
# SIMULATION PARAMETERS
# ---------------------

# dim: Geometry of the simulation
#      1d3v = cartesian grid with 1d in space + 3d in velocity
#      2d3v = cartesian grid with 2d in space + 3d in velocity
#      3d3v = cartesian grid with 3d in space + 3d in velocity
#      2drz = cylindrical (r,z) grid with 3d3v particles
#
dim = 1d3v
sim_units = wavelength

# order of interpolation
#
interpolation_order = 2

# SIMULATION TIME
# res_time: temporal resolution (integer = number of timeâˆ’steps within one normalization period)
# sim_time: duration of the simulation in units of the normalization period 
#
res_time = 14000
sim_time = 10.0

# SIMULATION BOX : for all space directions (use vector)
# res_space: spatial resolution (vector of integer = number of cells in one normalization wavelength )
# sim_length: length of the simulation in units of the normalization wavelength 
#
res_space  = 10000
sim_length = 0.01
bc_em_type_long = periodic

# ---------------
# PLASMA GEOMETRY
# ---------------


# RANDOM seed 
# this is used to randomize the random number generator
random_seed = 0


# DEFINE ALL SPECIES
# species_type: ion, electron, positron, test ...
# initialization_type: regular, cold or (isotrop) Maxwell?~H~RJuettner distribution
# n_part_per_cell: number of particle?~H~Rper?~H~Rcell
# c_part_max: factor on the memory reserved for the total number of particles
# mass: particle mass in units of the electron mass
# charge: particle charge in units of e (?~H~Re is the electron charge)
# density: species density in units of the normalization density
# mean_velocity: mean velocity of the species (3D vector) in units of the light velocity
# temperature: temperature of the species in units of m_e c^2
# dynamics_type: species type of dynamics = norm or rrLL
# time_frozen: time during which the particles are frozen in units of the normalization time
# radiating: boolean, if true incoherent radiation are calculated using the Larmor formula 
#
species
	species_type = ion
    species_geometry = constant
    vacuum_length   = 0.0
    dens_length_x   = 0.01

	initialization_type = regular
	ionization_model = none
	n_part_per_cell = 10
	c_part_max = 1.0
	mass = 1836.0
	charge = 1.0
	density = 1.0e0
	mean_velocity = 0.0 0 0
	temperature = 5.0e-4
	dynamics_type = norm
	time_frozen = 1000.0
	radiating = false
	bc_part_type_long = none
end

species
	species_type = eon1
    species_geometry = sine
    vacuum_length   = 0.0
    dens_length_x   = 0.01
	dens_dbl_params = 0.01 1.0
	initialization_type = regular
	ionization_model = none
	n_part_per_cell = 5
	c_part_max = 1.0
	mass = 1.0
	charge = -1.0
	density = 0.5
	mean_velocity = 0.001 0 0 
	temperature = 5.0e-4
	dynamics_type = norm
	time_frozen = 0.0
	radiating = false
	bc_part_type_long = none
end

species
	species_type = eon2
    species_geometry = sine
    vacuum_length   = 0.0
    dens_length_x   = 0.01
	dens_dbl_params = 0.01 1.0
	initialization_type = regular
	ionization_model = none
	n_part_per_cell = 5
	c_part_max = 1.0
	mass = 1.0
	charge = -1.0
	density = 0.5
	mean_velocity = -0.001 0 0
	temperature = 5.0e-4
	dynamics_type = norm
	time_frozen = 0.0
	radiating = false
	bc_part_type_long = none
end


# ---------------------
# DIAGNOSTIC PARAMETERS
# ---------------------

# print_every (on screen text output) 
print_every = 1400


# every for field dump
fieldDump_every = 100

# every for particle dump
 particleDump_every = 0
 
# DIAG ON SCALARS
# every = number of time-steps between each output
# #
 diagnostic scalar
 	every = 100
 	precision=3
	vars = Ebalance Etot Eparticles EFields Poynting E_ion N_ion E_eon N_eon Ex_U
 end
# 

# kind of projection: 1D) xPx xPy xPz xLor PxPy PxPz PyPz
# kind of projection: 2D) xPx xPy xPz xLor yPx yPy yPz yLor PxPy PxPz PyPz

diagnostic phase
 	kind = xPx 
 	species = eon1 eon2
 	every = 100
 
 	pos_min = 0
 	pos_max = 0.01
 	pos_num = 200
 	
 	mom_min = -0.01
 	mom_max = 0.01
 	mom_num = 200
 	
 	lor_min = -3.5
 	lor_max = 1.5
 	lor_num = 200
 	
 	deflate=5
 end

# diagnostic phase
#  	kind = xPx 
#  	species = eon
#  	every = 1
#  
#  	pos_min = 0.44
#  	pos_max = 0.56
#  	pos_num = 200
#  	
#  	mom_min = -0.05
#  	mom_max = 0.05
#  	mom_num = 200
#  	
#  	lor_min = -3.5
#  	lor_max = 1.5
#  	lor_num = 200
#  	
#  	deflate=5
#  end
# 
