# SIMULATION PARAMETERS
# dim: Geometry of the simulation
#      1d3v = cartesian grid with 1d in space + 3d in velocity
#      2d3v = cartesian grid with 2d in space + 3d in velocity
#      3d3v = cartesian grid with 3d in space + 3d in velocity
#      2drz = cylindrical (r,z) grid with 3d3v particles
#
dim = 2d3v

# order of interpolation
interpolation_order = 2 

# SIMULATION TIME
# res_time: temporal resolution (integer = number of timeâˆ’steps within one normalization period)
# sim_time: duration of the simulation in units of the normalization period 
#
res_time = 55
sim_time = 10

# SIMULATION BOX : for all space directions (use vector)
# res_space: spatial resolution (vector of integer = number of cells in one normalization wavelength )
# sim_length: length of the simulation in units of the normalization wavelength 
#
res_space  = 50  50  
sim_length = 5  5  

# PLASMA GEOMETRY
# plasma_geometry: string defining the plasma geometry
# ***_length: characteristic length for a given geometry
#
plasma_geometry = trap
vacuum_length   = 0.0  0.0 
plasma_length   = 0.0  0.0
slope_length = 0.0 0.0

# RANDOM seed 
# this is used to randomize the random number generator
random_seed = 0

# ----------------
# LASER PROPERTIES
# ----------------
#
# for each laser define:
# a0: maximum amplitude of the laser electric field (in units of the normalization field)
# angle: angle (in degree) at which the laser enters the simulation box
# delta: polarization parameter, (0:y) (1:z) (0.707106781:circ)
# time_profile: string defining the time profile
# double_params: vector of real parameters used by the different time-profiles
#
laser
	a0=1.0
	angle=0
	boxSide = west 
	delta=0.0              
	time_profile = gaussian
    y_profile = gaussian
    double_params = 1.0 0.0 0.0 # FWHM in intensity, plateau length, delay
    int_params = 2 # Cut-off of the longitudinal gaussian in number of sigma
end

# ---------------------
# DIAGNOSTIC PARAMETERS
# ---------------------

# print_every (on screen text output) 
print_every = 1


# DIAG ON SCALARS
# every = number of time-steps between each output
#
diagnostic scalar
	every = 1
end

dump_step = 10000
exit_after_dump = false

