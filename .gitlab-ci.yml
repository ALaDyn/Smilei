stages:
    - default
    - picsar
    - debug
    - no_mpi_threadmultiple
    - no_openmp

compile:
  stage: default
  only:
    - develop
    - merge_sdmd_dev

  script:
    # Force workdir cleaning in case of retried
    - echo "CI_PIPELINE_ID = " $CI_PIPELINE_ID
    - env
    - if [ -d /sps2/gitlab-runner/$CI_PIPELINE_ID ] ; then rm -rf /sps2/gitlab-runner/$CI_PIPELINE_ID ; fi
    # Move in test dir
    - mkdir -p /sps2/gitlab-runner/$CI_PIPELINE_ID
    - cp -r $CI_PROJECT_DIR /sps2/gitlab-runner/$CI_PIPELINE_ID
    - cd /sps2/gitlab-runner/$CI_PIPELINE_ID/smilei
    # Set the environment
    - make uninstall_happi
    - make happi
    - cd /sps2/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    # Run validation script
    - python validation.py -c  -v -l "/sps2/gitlab-runner/logs"

makerun1D:
  stage: default
  only:
    - develop
    - merge_sdmd_dev
    
  script:
    # Move in test dir
    - cd /sps2/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    # Run validation script
    - python validation.py -b "tst1d_*_*.py" -m 4 -o 4 -v -r 1 -l "/sps2/gitlab-runner/logs"
    - python validation.py -b "tst_ionization_current_1d*.py" -m 4 -o 4 -v -r 1 -l "/sps2/gitlab-runner/logs"

makerun2D:
  stage: default
  only:
    - develop
    - merge_sdmd_dev

  script:
    # Move in test dir
    - cd /sps2/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    # Run validation script
    - python validation.py -b "tst2d_??_*.py" -m 4 -o 4  -v -r 1 -l "/sps2/gitlab-runner/logs"
    - python validation.py -b "tst_ionization_current_2d*.py" -m 4 -o 4 -v -r 1 -l "/sps2/gitlab-runner/logs"

makerun3D:
  stage: default
  only:
    - develop
    - merge_sdmd_dev

  script:
    # Move in test dir
    - cd /sps2/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    # Run validation script
    - python validation.py -b "tst3d_??_*.py" -m 8 -o 12 -v -r 1 -l "/sps2/gitlab-runner/logs"
    - python validation.py -b "tst3d_s_??_*.py" -m 8 -o 12 -v -r 1 -l "/sps2/gitlab-runner/logs"
    - python validation.py -b "tst_ionization_current_3d*.py" -m 4 -o 4 -v -r 1 -l "/sps2/gitlab-runner/logs"

makerunAM:
  stage: default
  only:
    - develop
    - merge_sdmd_dev
    
  script:
    # Move in test dir
    - cd /sps2/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    # Run validation script
    - python validation.py -b "tstAM_??_*.py" -m 8 -o 12 -v -l "/sps2/gitlab-runner/logs"

makerunV:
  stage: default
  only:
    - develop
    - merge_sdmd_dev

  script:
    # Move in test dir
    - cd /sps2/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    # Run validation script
    - python validation.py -b "tst2d_v_??_*.py" -m 4 -o 4 -v -r 1 -l "/sps2/gitlab-runner/logs"
    - python validation.py -b "tst3d_v_??_*.py" -m 8 -o 12 -v -r 1 -l "/sps2/gitlab-runner/logs"

makerunCollisions:
  stage: default
  only:
    - develop
    - merge_sdmd_dev
    
  script:
    # Move in test dir
    - cd /sps2/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    # Run checking script
    - python validation.py -b "tst_collisions*.py" -m 4 -o 4 -v -r 1 -l "/sps2/gitlab-runner/logs"

picsar:
  stage: picsar
  only:
    - develop
    - merge_sdmd_dev

  script:
    - cd /sps2/gitlab-runner/$CI_PIPELINE_ID/smilei
    - make clean
    - cd /sps2/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    - python validation.py -k picsar -b "tstAM_picsar_04_laser_wake.py" -m 4 -o 4 -v

debug:
  stage: no_mpi_threadmultiple
  only:
    - develop

  script:
    - cd /sps2/gitlab-runner/$CI_PIPELINE_ID/smilei
    - make clean
    - cd /sps2/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    - python validation.py -k debug -c -v

no_mpi_threadmultiple:
  stage: no_mpi_threadmultiple
  only:
    - develop

  script:
    - cd /sps2/gitlab-runner/$CI_PIPELINE_ID/smilei
    - make clean
    - cd /sps2/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    - python validation.py -k no_mpi_tm -c -v

no_openmp:
  stage: no_mpi_threadmultiple
  only:
    - develop

  script:
    - cd /sps2/gitlab-runner/$CI_PIPELINE_ID/smilei
    - make clean
    - cd /sps2/gitlab-runner/$CI_PIPELINE_ID/smilei/validation
    - python validation.py -k noopenmp -c -v
